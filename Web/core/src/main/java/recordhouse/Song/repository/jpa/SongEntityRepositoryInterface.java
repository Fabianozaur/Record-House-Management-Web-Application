package recordhouse.Song.repository.jpa;

import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.CrudRepository;
import org.springframework.data.repository.query.Param;
import recordhouse.Song.domain.SongEntityModel;

import java.util.Optional;

public interface SongEntityRepositoryInterface extends CrudRepository<SongEntityModel, String> {

    // NOTE: The method name is made up out of Hibernate keywords!
    // findBy
    // Title - target field
    // Containing - containing the following:
    // name - parameter
    // Implementation will be auto-generated by Hibernate
    @Query("SELECT s FROM Songs s WHERE s.Title LIKE %:name% ")
    Iterable<SongEntityModel> findByTitleContaining(@Param("name") String name);

    // This is JPQL syntax, NOT PostgreSQL
    @Query("SELECT s FROM Songs s WHERE s.Likes = (SELECT MAX(s.Likes) FROM Songs s)")
    Optional<SongEntityModel> findMostLikedSong();

    @Query("SELECT s FROM Songs s WHERE s.Duration = (SELECT MAX(s.Duration) FROM Songs s)")
    // Corresponds to named native query 'Songs.findLongest' defined on SongEntityModel
    Optional<SongEntityModel> findLongest();

    // does not, because 'Pure native scalar queries are not yet supported'
}
